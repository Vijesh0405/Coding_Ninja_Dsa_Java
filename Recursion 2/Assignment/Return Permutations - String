//Vijesh0405 *********************** Vijesh0405 *********************** Vijesh0405 ***********************  Vijesh0405 *********************** Vijesh0405 ************
/***

Given a string S, find and return all the possible permutations of the input string.
Note 1 : The order of permutations is not important.
Note 2 : If original string contains duplicate characters, permutations will also be duplicates.
Input Format :
String S
Output Format :
All permutations (in different lines)
Sample Input :
abc
Sample Output :
abc
acb
bac
bca
cab
cba

***/


//***********************************************************************************************************************************************
//************************************************************ SOLUTION *************************************************************************
//***********************************************************************************************************************************************


public class solution {
	
	public static String[] permutationOfString(String input){
		// Write your code here
        if(input.length()==1){
            String ans[] = {input.charAt(0)+""};
            return ans;
        }
        String ans[] = permutationOfString(input.substring(1));
        int k = 0;
        String smallAns[] = new String[input.length()*ans.length];
        for(int i=0;i<ans.length;i++){
            smallAns[k++] = input.charAt(0)+ans[i];
            smallAns[k++] = ans[i]+input.charAt(0);
            for(int j=1;j<ans[0].length();j++){
                smallAns[k++] = ans[i].substring(0,j)+input.charAt(0)+ans[i].substring(j);
            }
           
        }
        
        return smallAns;
        
		
	}
	
}
